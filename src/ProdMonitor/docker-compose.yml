version: '3.8'

networks:
  default:
    name: 'prodmonitor-network'
  monitoring:
    driver: bridge

volumes:
  postgres_data:
  pm-logs:
  pgadmin_data:
  prometheus_data:
  grafana_data:

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: m4ks0n
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ProdMonitor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  app:
    build: .
    environment:
      ConnectionStrings__DefaultConnection: "User ID=m4ks0n;Password=admin;Server=db;Port=5432;Database=ProdMonitor"
      ASPNETCORE_URLS: "http://+:5091"
      ASPNETCORE_ENVIRONMENT: Development

    depends_on:
      - db

    stdin_open: true
    tty: true  

    ports:
      - "5091:5091"

    networks:
      - default
      - monitoring
      

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: limos.00@mail.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    networks:
      - default
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  prodmonitor.dashboard:
    image: mcr.microsoft.com/dotnet/nightly/aspire-dashboard:latest
    container_name: dashboard
    ports:
      - "18888:18888"
      - "4317:18889"
    networks:
      - default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
      - default

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: jaeger
  #   ports:
  #     - "5775:5775"    # Thrift over UDP
  #     - "6831:6831"    # Jaeger agent port (UDP)
  #     - "6832:6832"    # Jaeger agent port (UDP)
  #     - "5778:5778"    # Jaeger UI
  #     - "16686:16686"  # Jaeger Web UI (accessible on localhost:16686)
  #     - "14250:14250"  # Jaeger gRPC
  #     - "14268:14268"  # Jaeger HTTP API
  #     - "9411:9411"    # Zipkin HTTP endpoint (for compatibility)

  #   environment:
  #     - COLLECTOR_ZIPKIN_HTTP_HTTP_PORT=9411
  #   networks:
  #     - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring