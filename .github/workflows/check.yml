name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up .NET environment
        run: dotnet --version

      - name: Build Project
        run: |
          chmod +x ./scripts/ci/Build/build.sh
          ./scripts/ci/Build/build.sh src/ProdMonitor/ProdMonitor.Web/ProdMonitor.Web.csproj ProdMonitorPublish ./src/ProdMonitor/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ProdMonitorPublish
          path: ProdMonitorPublish/

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ProdMonitorPublish

      - name: Set up Test Environment
        run: dotnet --info

      - name: Run Unit Tests
        run: |
          chmod +x ./scripts/ci/Test/run_tests.sh
          ./scripts/ci/Test/run_tests.sh src/ProdMonitor/ProdMonitor.Test/ProdMonitor.Test.csproj

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
    needs:
      - build
      - unit-tests
    services:
      docker:
        image: docker:dind
        options: --privileged
    env:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_CERTDIR: ""
      DOCKER_DRIVER: overlay2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ProdMonitorPublish

      - name: Set up Test Environment
        run: dotnet --info

      - name: Run Integration Tests
        run: |
          docker info
          chmod +x ./scripts/ci/Test/run_tests.sh
          ./scripts/ci/Test/run_tests.sh src/ProdMonitor/ProdMonitor.IntegrationTests/ProdMonitor.IntegrationTests.csproj

  end-to-end-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
    needs:
      - build
      - unit-tests
      - integration-tests
    services:
      docker:
        image: docker:dind
        options: --privileged
    env:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_CERTDIR: ""
      DOCKER_DRIVER: overlay2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ProdMonitorPublish

      - name: Set up Test Environment
        run: dotnet --info

      - name: Run End-to-End Tests
        run: |
          chmod +x ./scripts/ci/Test/run_tests.sh
          ./scripts/ci/Test/run_tests.sh src/ProdMonitor/ProdMonitor.E2E/ProdMonitor.E2E.csproj
